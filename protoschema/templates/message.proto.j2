{% import "opt.proto.j2" as opts %}

{%- macro render_field(field, file, package) -%}
{{+ field.kind +}}{{+ field.field_type.render_name(file, package) +}} {{+ field.name +}} = {{+ field.tag }}
{%~ endmacro %}

message {{+ name +}} {
{% filter indent(2) %}
{%+ call opts::get_options(options) %}
{% endfilter %}

{% for enum_ in enums %}
{%+ filter indent(2) ~%}
{{+ enum_.render()? +}}
{%+ endfilter %}
{% endfor %}

{% for nested_msg in messages %}
{%+ filter indent(2) ~%}
{{+ nested_msg.render()? +}}
{%+ endfilter %}
{%- endfor ~%}

{% for oneof in oneofs %}
{%+ filter indent(2) ~%}
oneof {{+ oneof.name +}} {
  {% filter indent(2) %}
    {% call opts::get_options(oneof.options) %}
  {%~ endfilter %}

  {%+ for field in oneof.fields ~%}
  {%+ call render_field(field, file.as_ref(), package.as_ref()) %}
  {%- if !field.options.is_empty() +%} [
  {% call opts::field_opts(&field.options) +%}
  ] {%- endif -%};
  {%~ endfor %}
}
{%+ endfilter %}
{%- endfor ~%}

{% for field in fields %}
{%+ filter indent(2) ~%}
{%+ call render_field(field, file.as_ref(), package.as_ref()) %}
{% endfilter %}
  {%- if !field.options.is_empty() +%} [
  {% call opts::field_opts(&field.options) +%}
  ] {%- endif -%};
{%~ endfor %}
}
